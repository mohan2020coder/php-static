# Stage 1: Build PHP statically
FROM alpine:3.18 AS builder

ARG PHP_VERSION=8.2.12
ENV PHP_VERSION=${PHP_VERSION}

# Install required build dependencies
RUN apk add --no-cache \
    autoconf bison re2c make gcc g++ musl-dev openssl-dev zlib-dev \
    libxml2-dev curl-dev libpng-dev libjpeg-turbo-dev freetype-dev \
    postgresql-dev libtool pkgconf libxslt-dev wget

WORKDIR /build

# Clean PHP_VERSION to remove possible carriage return and download PHP source
RUN PHP_VERSION_CLEAN=$(echo "$PHP_VERSION" | tr -d '\r') && \
    echo "Downloading PHP version: $PHP_VERSION_CLEAN" && \
    wget https://www.php.net/distributions/php-${PHP_VERSION_CLEAN}.tar.gz && \
    tar -xf php-${PHP_VERSION_CLEAN}.tar.gz

WORKDIR /build/php-${PHP_VERSION_CLEAN}

# Configure PHP build: disable shared libs, enable CLI and required extensions
RUN ./configure \
    --disable-all \
    --enable-cli \
    --enable-mbstring \
    --enable-json \
    --enable-pdo \
    --enable-pdo_pgsql \
    --with-pgsql \
    --with-openssl \
    --with-zlib \
    --with-curl \
    --enable-bcmath \
    --enable-soap \
    --enable-xml \
    --enable-fileinfo \
    --enable-gd \
    --with-jpeg \
    --with-freetype \
    --disable-shared \
    LDFLAGS="-static" \
    CFLAGS="-static"

# Build using all CPU cores
RUN make -j$(nproc)

# Stage 2: Create minimal final image with static binary
FROM scratch AS final

COPY --from=builder /build/php-${PHP_VERSION_CLEAN}/sapi/cli/php /php-static

ENTRYPOINT ["/php-static"]
CMD ["-v"]
